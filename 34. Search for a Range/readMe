* Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm's runtime complexity must be in the order of O(log n).
If the target is not found in the array, return [-1, -1].

* For example,
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].

给定一个排序数组，以及目标数字，返回目标数字在其中的位置，要求时间复杂度 log(n)
首先,利用二分法找到数组中的一个目标
然后分别对左边以及右边利用二分法找到对应的目标,如下：
while(low < high)
{
   int mid = (low + high) / 2;
   if(nums[mid] == target)
       high = mid-1;
   else
      low = mid + 1;
}
